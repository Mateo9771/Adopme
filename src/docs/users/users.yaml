paths:
  /api/users:
    get:
      summary: Obtener todos los usuarios
      tags:
        - Users
      responses:
        200:
          description: Lista de usuarios
          content:
            application/json:
              schema:
                type: object
                properties:
                  status:
                    type: string
                    example: success
                  payload:
                    type: array
                    items:
                      $ref: '#/components/schemas/User'

  /api/users/{uid}:
    get:
      summary: Obtener un usuario por ID
      tags:
        - Users
      parameters:
        - in: path
          name: uid
          required: true
          schema:
            type: string
            example: 64bcae5b36a3e3d25ce80a91
          description: ID del usuario
      responses:
        200:
          description: Usuario encontrado
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/User'
        404:
          description: Usuario no encontrado

    put:
      summary: Actualizar usuario por ID
      tags:
        - Users
      parameters:
        - in: path
          name: uid
          required: true
          schema:
            type: string
            example: 64bcae5b36a3e3d25ce80a91
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                first_name:
                  type: string
                  example: Juan
                last_name:
                  type: string
                  example: PÃ©rez
                email:
                  type: string
                  example: juan@example.com
      responses:
        200:
          description: Usuario actualizado

    delete:
      summary: Eliminar usuario por ID
      tags:
        - Users
      parameters:
        - in: path
          name: uid
          required: true
          schema:
            type: string
            example: 64bcae5b36a3e3d25ce80a91
      responses:
        200:
          description: Usuario eliminado

  /api/users/{uid}/documents:
    post:
      summary: Subir documentos de un usuario
      tags:
        - Users
      parameters:
        - in: path
          name: uid
          required: true
          schema:
            type: string
            example: 64bcae5b36a3e3d25ce80a91
      requestBody:
        content:
          multipart/form-data:
            schema:
              type: object
              properties:
                documents:
                  type: array
                  items:
                    type: string
                    format: binary
      responses:
        200:
          description: Documentos subidos
        404:
          description: Usuario no encontrado

components:
  schemas:
    User:
      type: object
      properties:
        _id:
          type: string
          example: 64bcae5b36a3e3d25ce80a91
        first_name:
          type: string
          example: Mateo
        last_name:
          type: string
          example: Baldoni
        email:
          type: string
          example: mateo@testmail.com
        role:
          type: string
          example: user
        pets:
          type: array
          items:
            type: string
          example: ["64c1c740a778c0a2b5f902f1"]
        documents:
          type: array
          items:
            type: object
            properties:
              name:
                type: string
                example: DNI
              reference:
                type: string
                example: /documents/dni_mateo.pdf
